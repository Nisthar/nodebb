#!/bin/bash
source $OPENSHIFT_CARTRIDGE_SDK_BASH

cd $OPENSHIFT_REPO_DIR

# Read NodeBB version from package.json
version=`cat package.json | grep version | sed -s 's/[^0-9\.]//g'`

echo "Configuring NodeBB $version for OpenShift"

# Apply patches for selected version
for changeset in `ls patches/openshift-$version*.diff` ; do
	echo "Applying changeset "$changeset
	patch -N --no-backup-if-mismatch -s -r $changeset.rejected -p1 < $changeset
	if [ -f "$changeset.rejected" ] ; then
		echo "Changeset $changeset was rejected. Check $changeset.rej to see what parts of it could not be applied"
	fi
done

# Make sure, that `npm start` will run `nodebb start`, so NodeBB can restart itself and use correct logs
# TODO: this is too generic, it may replace other commands in the file.
sed -i 's/node loader.js/.\/nodebb start/g' package.json

# Override app.js
# We have to move original and replace it with our "wrapper"
# because NodeBB calls hardcoded "app.js" in some cases
# and we do not want to modify code in too many places.
if [ -f "openshift-app.js" ] ; then
	echo "Overriding app.js"
	mv app.js _app.js
	mv openshift-app.js app.js
fi

# Make sure there is /data/nodebb directory
mkdir -p $OPENSHIFT_DATA_DIR/nodebb

# Symlink public/uploads to $OPENSHIFT_DATA_DIR/nodebb/public-uploads
if [ `readlink -f $OPENSHIFT_DATA_DIR/nodebb/public-uploads` != `readlink -f public/uploads` ] ; then
	echo "Pointing uploads directory to [OPENSHIFT_DATA_DIR]/nodebb/public-uploads"
	cp -a public/uploads $OPENSHIFT_DATA_DIR/nodebb/public-uploads
	rm -rf public/uploads
	ln -s $OPENSHIFT_DATA_DIR/nodebb/public-uploads public/uploads
fi

# Symlink logs to $OPENSHIFT_DATA_DIR/nodebb/logs
if [ `readlink -f $OPENSHIFT_DATA_DIR/nodebb/logs` != `readlink -f logs` ] ; then
	echo "Pointing logs directory to [OPENSHIFT_DATA_DIR]/nodebb/logs"
	cp -a logs $OPENSHIFT_DATA_DIR/nodebb/logs
	rm -rf logs
	ln -s $OPENSHIFT_DATA_DIR/nodebb/logs logs
fi

echo "Running setup"

# Generate name
name=$OPENSHIFT_APP_NAME

# Generate password
pass=`tr -cd '[:alnum:]' < /dev/urandom | fold -w16 | head -n1 | fold -w4 | paste -sd\- -`

# Generate NodeBB secret
secret=`uuidgen -r`

# Try to get e-mail, if not found, use fake address
mail=$OPENSHIFT_LOGIN
if [ "$mail" = "" ] ; then
	mail="$name@$OPENSHIFT_APP_DNS"
fi

# Prepare JSON
json='{"secret": "'$secret'", "admin:username": "'$name'", "admin:email": "'$mail'", "admin:password": "'$pass'", "admin:password:confirm": "'$pass'"}'

# Run setup and redirect output to file, so we can search it later
LOGFILE="openshift-nodebb.log"
node app --setup "$json" &> $LOGFILE

# Output to whole thing to the client
cat $LOGFILE

# Check result by looking for specific text
# Would be better if NodeBB's setup would exit with code
# but it does not, so we use this fragile workaround.
if cat $LOGFILE | grep -q "There was a problem completing NodeBB" ; then
	# Failed
	client_result ""
	client_result ".-============================================-."
	client_result ".  Setup failed."
	client_result "."
	client_result ".  There was a problem completing NodeBB setup."
	client_result "."
	client_result ".  Check logfile for more information:"
	client_result ".  $LOGFILE"
	client_result "^-============================================-^"
	client_result ""
else
	# Success
	if cat $LOGFILE | grep -q "running initial user setup" ; then
		# Created new admin user
		client_result ""
		client_result ".-============================================-."
		client_result ".  Setup finished."
		client_result "."
		client_result ".  New administrator user has been created:"
		client_result "."
		client_result ".    email   : $mail"
		client_result ".    login   : $name"
		client_result ".    password: $pass"
		client_result "."
		client_result ".  You can login at:"
		client_result ".  https://$OPENSHIFT_APP_DNS/login"
		client_result "."
		client_result ".  WARNING: Be sure to change admin e-mail and"
		client_result ".           password as soon as possible!"
		client_result "^-============================================-^"
		client_result ""
	else
		# Admin user was already there
		client_result ""
		client_result ".-============================================-."
		client_result ".  Setup finished."
		client_result "."
		client_result ".  You can view your NodeBB at:"
		client_result ".  https://$OPENSHIFT_APP_DNS/"
		client_result "^-============================================-^"
		client_result ""
	fi

	rm $LOGFILE
fi

# Make sure, that node.env will know to run app.js
sed -i 's/server.js/app.js/g' $OPENSHIFT_NODEJS_DIR/configuration/node.env